---
name: Release Ansible Galaxy and Dockerhub

on: # yamllint disable-line rule:truthy
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get current version
        id: cversion
        run: echo "::set-output name=version::$(grep ^version src/galaxy.yml | awk '{ print $2 }')"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          cd src
          python -m pip install --upgrade pip
          pip install --upgrade ansible
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build Ansible Collection
        run: |
          cd src
          ansible-galaxy collection build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.cversion.outputs.version }}
          release_name: Release v${{ steps.cversion.outputs.version }}
          body: |
            # Ansible Collection: i2btech.ops

            Install with:
            ```sh
            ansible-galaxy collection install -r requirements.yml -f
            ```

            The requirements.yml needs to have the following format and content:
            ```yaml
            ---
            collections:
                - https://github.com/i2btech/ansible-collection/releases/download/v${{ steps.cversion.outputs.version }}/i2btech-ops-${{ steps.cversion.outputs.version }}.tar.gz
            ```
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src/i2btech-ops-${{ steps.cversion.outputs.version }}.tar.gz
          asset_name: src/i2btech-ops-${{ steps.cversion.outputs.version }}.tar.gz
          asset_content_type: application/tar+gzip

      - name: Deploy Ansible collection to Galaxy
        run: |
          ansible-galaxy collection publish src/i2btech-ops-${{ steps.cversion.outputs.version }}.tar.gz --api-key ${{ secrets.ANSIBLE_GALAXY_API_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/bake-action@v2
        with:
          files: |
            ./docker-bake.hcl
          targets: playbooks
          push: true
          set: |
            *.tags=i2btech/ansible-collection:${{ steps.cversion.outputs.version }}
