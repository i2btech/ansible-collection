- name: "Backup DB"
  hosts: localhost
  connection: local
  gather_facts: false
  become: false

  vars:
    rdsbackup_devops_backups: "/tmp/backup-database"

  tasks:

    - name: Set timestamp
      set_fact:
        timestamp: "{{ lookup('pipe','date +%Y%m%d-%H%M%S') }}"
      changed_when: false

    - name: Ensures backup directory exists
      file:
        path: "{{ rdsbackup_devops_backups }}"
        state: directory
        mode: 0755

    - name: Dump databases
      community.mysql.mysql_db:
        state: dump
        login_host: "{{ rdsbackup_address }}"
        login_user: "{{ rdsbackup_user_name }}"
        login_password: "{{ rdsbackup_user_pass }}"
        name: "{{ item }}"
        target: "{{ rdsbackup_devops_backups }}/{{ item }}-{{ timestamp }}.sql"
        dump_extra_args: --routines --no-autocommit --single-transaction --opt
      with_items: "{{ rdsbackup_dump_list }}"

    - name: Create a zip archive from dumps
      archive:
        path: "{{ rdsbackup_devops_backups }}/{{ item }}-{{ timestamp }}.sql"
        dest: "{{ rdsbackup_devops_backups }}/{{ item }}-{{ timestamp }}.zip"
        format: zip
      with_items: "{{ rdsbackup_dump_list }}"

    - name: Create a latest zip copy from dumps
      copy:
        src: "{{ rdsbackup_devops_backups }}/{{ item }}-{{ timestamp }}.zip"
        dest: "{{ rdsbackup_devops_backups }}/{{ item }}-latest.zip"
        remote_src: false
      with_items: "{{ rdsbackup_dump_list }}"

    - name: Sets complete list of dumps to upload
      set_fact:
        dump_list_to_upload: "{{ rdsbackup_dump_list | product([timestamp, 'latest']) | map('join', '-') | list }}"
      changed_when: false

    - name: "Upload files to Bucket"
      community.aws.s3_sync:
        bucket: "{{ rdsbackup_s3_backup }}"
        key_prefix: "/"
        file_root: "{{ rdsbackup_devops_backups }}/"
      when: rdsbackup_s3_backup is defined
